{"ts":1351811891971,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\nvar mongoose = require('../')\n  , Schema = mongoose.Schema;\n\nvar db = mongoose.connect('localhost', 'testing_bench');\n\nvar DocSchema = new Schema({\n    title: String\n});\n\nvar AllSchema = new Schema({\n    string: { type: String, required: true }\n  , number: { type: Number, min: 10 }\n  , date  : Date\n  , bool  : Boolean\n  , buffer: Buffer\n  , objectid: Schema.ObjectId\n  , array : Array\n  , strings: [String]\n  , numbers: [Number]\n  , dates  : [Date]\n  , bools  : [Boolean]\n  , buffers: [Buffer]\n  , objectids: [Schema.ObjectId]\n  , docs     : { type: [DocSchema], validate: function () { return true }}\n  , s: { nest: String }\n});\n\nvar A = mongoose.model('A', AllSchema);\n\nvar methods = [];\nmethods.push(function (a, cb) {\n  A.findOne({ _id: a._id }, cb);\n}); // 2 MB\nmethods.push(function (a, cb) {\n  A.find({ _id: a._id, bool: a.bool }, cb);\n}); // 3.8 MB\nmethods.push(function (a, cb) {\n  A.findById(a._id, cb);\n}); // 4.6 MB\nmethods.push(function (a, cb) {\n  A.where('number', a.number).limit(10).exec(cb)\n}); // 4.8 MB\nmethods.push(function (a, cb) {\n  A.where('date', a.date).select('string').limit(10).exec(cb)\n}); // 3.5 mb\nmethods.push(function (a, cb) {\n  A.where('date', a.date).select('string bool').limit(10).exec(cb)\n}); // 3.5 MB\nmethods.push(function (a, cb) {\n  A.where('date', a.date).where('array').in(3).limit(10).exec(cb)\n}); // 1.82 MB\nmethods.push(function (a, cb) {\n  A.update({ _id: a._id }, { $addToset: { array: \"heeeeello\" }}, cb);\n}); // 3.32 MB\nmethods.push(function (a, cb) {\n  A.remove({ _id: a._id }, cb);\n}); // 3.32 MB\nmethods.push(function (a, cb) {\n  A.find().where('objectids').exists().select('dates').limit(10).exec(cb);\n}); // 3.32 MB\nmethods.push(function (a, cb) {\n  A.count({ strings: a.strings[2], number: a.number }, cb);\n}); // 3.32 MB\nmethods.push(function (a, cb) {\n  a.string= \"asdfaf\";\n  a.number = 38383838;\n  a.date= new Date;\n  a.bool = false;\n  a.array.push(3);\n  a.dates.push(new Date);\n  a.bools.push([true, false]);\n  a.docs.addToSet({ title: 'woot' });\n  a.strings.remove(\"three\");\n  a.numbers.pull(72);\n  a.objectids.$pop();\n  a.docs.pull.apply(a.docs, a.docs);\n  a.s.nest = \"aooooooga\";\n\n  if (i%2)\n  a.toObject({ depopulate: true });\n  else\n  a._delta();\n\n  cb();\n});\n\nvar started = process.memoryUsage();\nvar start = new Date;\nvar total = 10000;\nvar i = total;\n\nmongoose.connection.on('open', function () {\n  mongoose.connection.db.dropDatabase(function () {\n\n    ;(function cycle () {\n      if (0 === i--) return done();\n\n      var a = new A({\n          string: \"hello world\"\n        , number: 444848484\n        , date: new Date\n        , bool: true\n        , buffer: new Buffer(0)\n        , objectid: new mongoose.Types.ObjectId()\n        , array: [4,{},[],\"asdfa\"]\n        , strings: [\"one\",\"two\",\"three\",\"four\"]\n        , numbers:[72,6493,83984643,348282.55]\n        , dates:[new Date, new Date, new Date]\n        , bools:[true, false, false, true, true]\n        , buffers: [new Buffer([33]), new Buffer([12])]\n        , objectids: [new mongoose.Types.ObjectId]\n        , docs: [ {title: \"yo\"}, {title:\"nowafasdi0fas asjkdfla fa\" }]\n      });\n\n      a.save(function (err) {\n        methods[Math.random()*methods.length|0](a, function () {\n          a= u =null;\n          process.nextTick(cycle);\n        })\n      });\n\n      //if (i%2)\n        //a.toObject({ depopulate: true });\n      //else\n        //a._delta();\n\n      if (!(i%50)) {\n        //var u = process.memoryUsage();\n        //console.error('rss: %d, vsize: %d, heapTotal: %d, heapUsed: %d',\n            //u.rss, u.vsize, u.heapTotal, u.heapUsed);\n      }\n    })()\n\n    function done () {\n      var time= (new Date - start)/1000;\n      console.error('took %d seconds for %d docs (%d dps)', time, total, total/time);\n      var used = process.memoryUsage();\n      //console.error(((used.vsize - started.vsize) / 1048576)+' MB');\n\n      var res = {}\n      res.rss  = used.rss - started.rss;\n      res.heapTotal = used.heapTotal - started.heapTotal;\n      res.heapUsed = used.heapUsed - started.heapUsed;\n      console.error('change: ', res);\n\n      //console.error(a.toObject({depopulate:true}));\n\n      mongoose.connection.db.dropDatabase(function () {\n        mongoose.connection.close();\n      });\n    }\n\n  // --trace-opt --trace-deopt --trace-bailout \n  })\n})\n"]],"start1":0,"start2":0,"length1":0,"length2":4290}]],"length":4290}
{"contributors":[],"silentsave":false,"ts":1352707159220,"patch":[[{"diffs":[[0,"chema;\n\n"],[1,"//"],[0,"var db ="]],"start1":54,"start2":54,"length1":16,"length2":18}]],"length":4292,"saved":false}
{"ts":1352707874614,"patch":[[{"diffs":[[0,"   }\n\n  "],[-1,"//"],[0," --trace"]],"start1":4230,"start2":4230,"length1":18,"length2":16}]],"length":4290,"saved":false}
{"ts":1352707888612,"patch":[[{"diffs":[[0,"   }\n\n  "],[1,"//"],[0," --trace"]],"start1":4230,"start2":4230,"length1":16,"length2":18}]],"length":4292,"saved":false}
