{"ts":1352709978562,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\nvar mongoose = require('../')\n  , utils = require('../lib/utils')\n  , clone = utils.clone\n  , Schema = mongoose.Schema\n\nvar DocSchema = new Schema({\n    title: String\n});\n\nvar AllSchema = new Schema({\n    string: { type: String, required: true }\n  , number: { type: Number, min: 10 }\n  , date  : Date\n  , bool  : Boolean\n  , buffer: Buffer\n  , objectid: Schema.ObjectId\n  , array : Array\n  , strings: [String]\n  , numbers: [Number]\n  , dates  : [Date]\n  , bools  : [Boolean]\n  , buffers: [Buffer]\n  , objectids: [Schema.ObjectId]\n  , docs     : { type: [DocSchema], validate: function () { return true }}\n  , s: { nest: String }\n});\n\nvar A = mongoose.model('A', AllSchema);\nvar a = new A({\n    string: \"hello world\"\n  , number: 444848484\n  , date: new Date\n  , bool: true\n  , buffer: new Buffer(0)\n  , objectid: new mongoose.Types.ObjectId()\n  , array: [4,{},[],\"asdfa\"]\n  , strings: [\"one\",\"two\",\"three\",\"four\"]\n  , numbers:[72,6493,83984643,348282.55]\n  , dates:[new Date, new Date, new Date]\n  , bools:[true, false, false, true, true]\n  , buffers: [new Buffer([33]), new Buffer([12])]\n  , objectids: [new mongoose.Types.ObjectId]\n  , docs: [ {title: \"yo\"}, {title:\"nowafasdi0fas asjkdfla fa\" }]\n  , s: { nest: 'hello there everyone!' }\n});\n\nvar start = new Date;\nvar total = 100000;\nvar i = total;\n\nfor (var i = 0, len = total; i < len; ++i) {\n  a.toObject({ depopulate: true });\n}\n\nvar time= (new Date - start)/1000;\nconsole.error('took %d seconds for %d docs (%d dps)', time, total, total/time);\nvar used = process.memoryUsage();\n\n// --trace-opt --trace-deopt --trace-bailout\n"]],"start1":0,"start2":0,"length1":0,"length2":1582}]],"length":1582}
