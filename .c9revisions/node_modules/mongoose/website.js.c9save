{"ts":1352708253352,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\nvar fs= require('fs')\nvar jade = require('jade')\nvar package = require('./package')\nvar hl = require('./docs/helpers/highlight')\nvar linktype = require('./docs/helpers/linktype')\nvar href = require('./docs/helpers/href')\nvar klass = require('./docs/helpers/klass')\n\n// add custom jade filters\nrequire('./docs/helpers/filters')(jade);\n\n// use last release\npackage.version = getVersion();\n\nvar filemap = require('./docs/source');\nvar files = Object.keys(filemap);\n\nfiles.forEach(function (file) {\n  var filename = __dirname + '/' + file;\n  jadeify(filename, filemap[file]);\n\n  if ('--watch' == process.argv[2]) {\n    fs.watchFile(filename, { interval: 1000 }, function (cur, prev) {\n      if (cur.mtime > prev.mtime) {\n        jadeify(filename, filemap[file]);\n      }\n    });\n  }\n});\n\nfunction jadeify (filename, options) {\n  options || (options = {});\n  options.package = package;\n  options.hl = hl;\n  options.linktype = linktype;\n  options.href = href;\n  options.klass = klass;\n  jade.renderFile(filename, options, function (err, str) {\n    if (err) return console.error(err.stack);\n\n    var newfile = filename.replace('.jade', '.html')\n    fs.writeFile(newfile, str, function (err) {\n      if (err) return console.error('could not write', err.stack);\n      console.log('%s : rendered ', new Date, newfile);\n    });\n  });\n}\n\nfunction getVersion () {\n  var hist = fs.readFileSync('./History.md','utf8').replace(/\\r/g, '\\n').split('\\n');\n  for (var i = 0; i < hist.length; ++i) {\n    var line = (hist[i] || '').trim();\n    if (!line) continue;\n    var match = /^\\s*([^\\s]+)\\s/.exec(line);\n    if (match && match[1])\n      return match[1];\n  }\n  throw new Error('no match found');\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":1682}]],"length":1682}
