{"ts":1352708301651,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/**\n * Module dependencies.\n */\n\nvar mongoose = require('../')\n  , Mongoose = mongoose.Mongoose\n  , Collection = mongoose.Collection\n  , assert = require('assert')\n  , startTime = Date.now()\n  , queryCount = 0\n  , opened = 0\n  , closed = 0;\n\nif (process.env.D === '1')\n  mongoose.set('debug', true);\n\n/**\n * Override all Collection related queries to keep count\n */\n\n[   'ensureIndex'\n  , 'findAndModify'\n  , 'findOne'\n  , 'find'\n  , 'insert'\n  , 'save'\n  , 'update'\n  , 'remove'\n  , 'count'\n  , 'distinct'\n  , 'isCapped'\n  , 'options'\n].forEach(function (method) {\n\n  var oldMethod = Collection.prototype[method];\n\n  Collection.prototype[method] = function () {\n    queryCount++;\n    return oldMethod.apply(this, arguments);\n  };\n\n});\n\n/**\n * Override Collection#onOpen to keep track of connections\n */\n\nvar oldOnOpen = Collection.prototype.onOpen;\n\nCollection.prototype.onOpen = function(){\n  opened++;\n  return oldOnOpen.apply(this, arguments);\n};\n\n/**\n * Override Collection#onClose to keep track of disconnections\n */\n\nvar oldOnClose = Collection.prototype.onClose;\n\nCollection.prototype.onClose = function(){\n  closed++;\n  return oldOnClose.apply(this, arguments);\n};\n\n/**\n * Create a connection to the test database.\n * You can set the environmental variable MONGOOSE_TEST_URI to override this.\n *\n * @api private\n */\n\nmodule.exports = function (options) {\n  options || (options = {});\n  var uri;\n\n  if (options.uri) {\n    uri = options.uri;\n    delete options.uri;\n  } else {\n    uri = process.env.MONGOOSE_TEST_URI ||\n          'mongodb://localhost/mongoose_test'\n  }\n\n  var noErrorListener = !! options.noErrorListener;\n  delete options.noErrorListener;\n\n  var conn = mongoose.createConnection(uri, options);\n\n  if (noErrorListener) return conn;\n\n  conn.on('error', function (err) {\n    assert.ok(err);\n  });\n\n  return conn;\n};\n\n/**\n * Module exports.\n */\n\nmodule.exports.mongoose = mongoose;\n"]],"start1":0,"start2":0,"length1":0,"length2":1904}]],"length":1904}
